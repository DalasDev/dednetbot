{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/alexismurer/Desktop/Ouroboros/Coding/RetroBot/imports/commands/ban.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/commands/ban.js","filename":"/Users/alexismurer/Desktop/Ouroboros/Coding/RetroBot/imports/commands/ban.js","passPerPreset":false,"envName":"development","cwd":"/Users/alexismurer/Desktop/Ouroboros/Coding/RetroBot","root":"/Users/alexismurer/Desktop/Ouroboros/Coding/RetroBot","generatorOpts":{"filename":"/Users/alexismurer/Desktop/Ouroboros/Coding/RetroBot/imports/commands/ban.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/commands/ban.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar Discord = require(\"discord.js\"); //ban @member reason\n\n\nmodule.exports.run = function () {\n  function _callee(bot, message, args) {\n    var bUser, repchannel, errorschannel, bReason, embed;\n    return _regenerator.default.async(function () {\n      function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              bUser = message.guild.member(message.mentions.users.first() || message.guild.members.get(args[0]));\n              repchannel = message.guild.channels.find(\"name\", \"🌘reports_bots\");\n              errorschannel = message.guild.channels.find(\"name\", \"🌏errors_bots\");\n              bReason = args.join(\" \").slice(22); //лимит который нужно прописать во все комманды что бы никто другой пока что не использовал\n              // if(!message.member.hasPermission(\"MANAGE_MESSAGES\"))\n              // \treturn;\n\n              if (bUser) {\n                _context.next = 6;\n                break;\n              }\n\n              return _context.abrupt(\"return\", message.channel.send(\"Пользователь не существует!\"));\n\n            case 6:\n              if (message.member.hasPermission(\"BAN_MEMBERS\", \"ADMINISTRATOR\")) {\n                _context.next = 8;\n                break;\n              }\n\n              return _context.abrupt(\"return\", message.channel.send(\"Похоже у тебя недостаточно на это прав, дружище :thinking:.\"));\n\n            case 8:\n              if (!bUser.hasPermission(\"MANAGE_MESSAGES\")) {\n                _context.next = 10;\n                break;\n              }\n\n              return _context.abrupt(\"return\", message.channel.send(\"Этот пользователь не может быть забанен!\"));\n\n            case 10:\n              if (errorschannel) {\n                _context.next = 12;\n                break;\n              }\n\n              return _context.abrupt(\"return\", message.channel.send(\"Канал ошибок не существует!\"));\n\n            case 12:\n              if (!repchannel) errorschannel.send(\"Канал репортов не существует!\");\n\n              if (repchannel) {\n                _context.next = 15;\n                break;\n              }\n\n              return _context.abrupt(\"return\", message.channel.send(\"Канал репортов не существует!\"));\n\n            case 15:\n              embed = new Discord.RichEmbed().setTitle(\"ОТЧЕТ О БАНЕ\").setColor(\"#DD5044\").addField(\"Забаненный пользователь:\", \"\" + bUser, true).addField(\"Пользователя забанил:\", \"<@\" + message.author.id + \">\", true).addField(\"Забанен в канале:\", message.channel, true).addField(\"Время бана:\", message.createdAt, true).addField(\"Был забанен за:\", bReason, true);\n              message.guild.member(bUser).ban(bReason);\n              message.channel.send(bUser + \" был забанен за \" + bReason);\n              repchannel.send({\n                embed: embed\n              });\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }\n\n      return _callee$;\n    }(), null, this);\n  }\n\n  return _callee;\n}();\n\nmodule.exports.help = {\n  name: \"ban\"\n};","map":{"version":3,"sources":["imports/commands/ban.js"],"names":["Discord","require","module","exports","run","bot","message","args","bUser","guild","member","mentions","users","first","members","get","repchannel","channels","find","errorschannel","bReason","join","slice","channel","send","hasPermission","embed","RichEmbed","setTitle","setColor","addField","author","id","createdAt","ban","help","name"],"mappings":";;;;AAAA,IAAMA,UAAUC,QAAQ,YAAR,CAAhB,C,CAEA;;;AAEAC,OAAOC,OAAP,CAAeC,GAAf;AAAqB,mBAAOC,GAAP,EAAYC,OAAZ,EAAqBC,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEdC,mBAFc,GAENF,QAAQG,KAAR,CAAcC,MAAd,CAAqBJ,QAAQK,QAAR,CAAiBC,KAAjB,CAAuBC,KAAvB,MAAkCP,QAAQG,KAAR,CAAcK,OAAd,CAAsBC,GAAtB,CAA0BR,KAAK,CAAL,CAA1B,CAAvD,CAFM;AAGhBS,wBAHgB,GAGHV,QAAQG,KAAR,CAAcQ,QAAd,CAAuBC,IAAvB,SAAoC,gBAApC,CAHG;AAIhBC,2BAJgB,GAIAb,QAAQG,KAAR,CAAcQ,QAAd,CAAuBC,IAAvB,SAAoC,eAApC,CAJA;AAKhBE,qBALgB,GAKNb,KAAKc,IAAL,CAAU,GAAV,EAAeC,KAAf,CAAqB,EAArB,CALM,EAOpB;AACA;AACA;;AAToB,kBAWhBd,KAXgB;AAAA;AAAA;AAAA;;AAAA,+CAYZF,QAAQiB,OAAR,CAAgBC,IAAhB,CAAqB,6BAArB,CAZY;;AAAA;AAAA,kBAahBlB,QAAQI,MAAR,CAAee,aAAf,CAA6B,aAA7B,EAA4C,eAA5C,CAbgB;AAAA;AAAA;AAAA;;AAAA,+CAcZnB,QAAQiB,OAAR,CAAgBC,IAAhB,CAAqB,6DAArB,CAdY;;AAAA;AAAA,mBAejBhB,MAAMiB,aAAN,CAAoB,iBAApB,CAfiB;AAAA;AAAA;AAAA;;AAAA,+CAgBZnB,QAAQiB,OAAR,CAAgBC,IAAhB,CAAqB,0CAArB,CAhBY;;AAAA;AAAA,kBAiBhBL,aAjBgB;AAAA;AAAA;AAAA;;AAAA,+CAkBZb,QAAQiB,OAAR,CAAgBC,IAAhB,CAAqB,6BAArB,CAlBY;;AAAA;AAmBpB,kBAAG,CAACR,UAAJ,EACCG,cAAcK,IAAd,CAAmB,+BAAnB;;AApBmB,kBAqBhBR,UArBgB;AAAA;AAAA;AAAA;;AAAA,+CAsBZV,QAAQiB,OAAR,CAAgBC,IAAhB,CAAqB,+BAArB,CAtBY;;AAAA;AAwBhBE,mBAxBgB,GAwBR,IAAI1B,QAAQ2B,SAAZ,GACXC,QADW,CACF,cADE,EAEXC,QAFW,CAEF,SAFE,EAGXC,QAHW,CAGF,0BAHE,OAG6BtB,KAH7B,EAGsC,IAHtC,EAIXsB,QAJW,CAIF,uBAJE,SAI4BxB,QAAQyB,MAAR,CAAeC,EAJ3C,QAIkD,IAJlD,EAKXF,QALW,CAKF,mBALE,EAKmBxB,QAAQiB,OAL3B,EAKoC,IALpC,EAMXO,QANW,CAMF,aANE,EAMaxB,QAAQ2B,SANrB,EAMgC,IANhC,EAOXH,QAPW,CAOF,iBAPE,EAOiBV,OAPjB,EAO0B,IAP1B,CAxBQ;AAiCpBd,sBAAQG,KAAR,CAAcC,MAAd,CAAqBF,KAArB,EAA4B0B,GAA5B,CAAgCd,OAAhC;AAEAd,sBAAQiB,OAAR,CAAgBC,IAAhB,CAAqBhB,QAAM,kBAAN,GAA0BY,OAA/C;AACAJ,yBAAWQ,IAAX,CAAgB;AAACE;AAAD,eAAhB;;AApCoB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAArB;AAAA;;AAuCAxB,OAAOC,OAAP,CAAegC,IAAf,GAAsB;AACrBC,QAAM;AADe,CAAtB","sourcesContent":["const Discord = require(\"discord.js\");\n\n//ban @member reason\n\nmodule.exports.run = async (bot, message, args) => {\n\n\tconst bUser = message.guild.member(message.mentions.users.first() || message.guild.members.get(args[0]));\n\tlet repchannel = message.guild.channels.find(`name`, \"🌘reports_bots\");\n\tlet errorschannel = message.guild.channels.find(`name`, \"🌏errors_bots\");\n\tlet bReason = args.join(\" \").slice(22);\n\n\t//лимит который нужно прописать во все комманды что бы никто другой пока что не использовал\n\t// if(!message.member.hasPermission(\"MANAGE_MESSAGES\"))\n\t// \treturn;\n\n\tif(!bUser)\n\t\treturn message.channel.send(\"Пользователь не существует!\");\n\tif(!message.member.hasPermission(\"BAN_MEMBERS\", \"ADMINISTRATOR\"))\n\t\treturn message.channel.send(\"Похоже у тебя недостаточно на это прав, дружище :thinking:.\");\n\tif(bUser.hasPermission(\"MANAGE_MESSAGES\"))\n\t\treturn message.channel.send(\"Этот пользователь не может быть забанен!\");\n\tif(!errorschannel)\n\t\treturn message.channel.send(\"Канал ошибок не существует!\");\n\tif(!repchannel)\n\t\terrorschannel.send(\"Канал репортов не существует!\");\n\tif(!repchannel)\n\t\treturn message.channel.send(\"Канал репортов не существует!\");\n\n\tlet embed = new Discord.RichEmbed()\n\t.setTitle(\"ОТЧЕТ О БАНЕ\")\n\t.setColor(\"#DD5044\")\n\t.addField(\"Забаненный пользователь:\", `${bUser}`, true)\n\t.addField(\"Пользователя забанил:\", `<@${message.author.id}>`, true)\n\t.addField(\"Забанен в канале:\", message.channel, true)\n\t.addField(\"Время бана:\", message.createdAt, true)\n\t.addField(\"Был забанен за:\", bReason, true)\n\n\tmessage.guild.member(bUser).ban(bReason);\n\n\tmessage.channel.send(bUser+\" был забанен за \"+ bReason);\n\trepchannel.send({embed});\n}\n\nmodule.exports.help = {\n\tname: \"ban\"\n}\n"]},"sourceType":"script","hash":"2d132947d316c69addd94a20d82844fd1029a8e9"}
